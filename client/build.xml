<?xml version="1.0" encoding="UTF-8"?>
<project name="WarWorlds" default="help">
    <!-- taskdef resource="net/sf/antcontrib/antcontrib.properties"/-->

    <property file="local.properties" />
    <property file="ant.properties" />
    <property name="java.target" value="1.6" />
    <property name="java.source" value="1.6" />
    <property name="deploy.location" value="../../deploy"/>
    <property environment="env" />
    <condition property="sdk.dir" value="${env.ANDROID_HOME}">
        <isset property="env.ANDROID_HOME" />
    </condition>
    <loadproperties srcFile="project.properties" />

    <!-- quick check on sdk.dir -->
    <fail message="sdk.dir is missing."
          unless="sdk.dir"
    />

    <import file="${sdk.dir}/tools/ant/build.xml" />

    <target name="-set-proguard-config">
        <condition property="proguard.config"
                   value="${proguard.base.config}:proguard-release.txt"
                   else="${proguard.base.config}:proguard-debug.txt">
            <isfalse value="${build.is.packaging.debug}"/>
        </condition>
    </target>

    <target name="-debug-obfuscation-check" depends="-set-proguard-config">
        <!-- enable proguard even in debug mode -->
        <property name="proguard.enabled" value="true"/>
        <echo>proguard.config is ${proguard.config}</echo>

        <!-- Secondary dx input (jar files) is empty since all the jar files will be in the
             obfuscated jar -->
        <path id="out.dex.jar.input.ref" />
    </target>

    <target name="-release-obfuscation-check" depends="-set-proguard-config">
        <!-- enable proguard even in debug mode -->
        <property name="proguard.enabled" value="true"/>
        <echo>proguard.config is ${proguard.config}</echo>

        <!-- Secondary dx input (jar files) is empty since all the jar files will be in the
             obfuscated jar -->
        <path id="out.dex.jar.input.ref" />
    </target>

    <target name="-pre-build">
        <delete>
            <fileset dir="${basedir}" includes="**/crunch/**"/>
        </delete>
        <if>
            <condition><equals arg1="${build.target}" arg2="release" /></condition>
            <then>
               <propertyfile file="version.properties" comment="Version info">
                   <entry key="build.number" default="0" type="int" operation="+" value="1" />
               </propertyfile>
               <loadproperties srcFile="version.properties" />

                <!-- make sure on_behalf_of is commented out -->
                <replaceregexp file="assets/warworlds.properties"
                               match="^#?user.on_behalf_of=.*$" flags="gm"
                               replace="#user.on_behalf_of=nobody" />

                <!-- make sure debug is set to 'false' -->
                <replaceregexp file="assets/warworlds.properties"
                               match="^debug=.*$" flags="gm"
                               replace="debug=false" />

                <!-- change all of the in-app purchase fields to their defaults -->
                <replaceregexp file="assets/warworlds.properties"
                               match="^iap\.([^=]+)=.*$" flags="gm"
                               replace="iap.\1=\1" />

                <!-- make sure the welcome.rss field is pointing to the live server -->
                <replaceregexp file="assets/warworlds.properties"
                               match="^welcome.rss=.*$" flags="gm"
                               replace="welcome.rss=http://www.war-worlds.com/forum/announcements/rss" />

                <!-- update the version number -->
                <replaceregexp file="AndroidManifest.xml"
                               match="android:versionCode=&quot;(.*)&quot;"
                               flags="g"
                               replace="android:versionCode=&quot;${build.number}&quot;" />

                <replaceregexp file="AndroidManifest.xml"
                               match="android:versionName=&quot;(.*)&quot;"
                               flags="g"
                               replace="android:versionName=&quot;0.7.${build.number}&quot;" />
            </then>
            <else>
               <loadproperties srcFile="version.properties" />

                <!-- put debug back to 'true' -->
                <replaceregexp file="assets/warworlds.properties"
                               match="^debug=.*$"
                               flags="gm"
                               replace="debug=true" />
            </else>
        </if>
    </target>

    <target name="-pre-compile">
        <echo message="Before: ${toString:project.all.jars.path}" />
        <path id="project.all.jars.path">
            <path path="${toString:project.all.jars.path}"/>
            <pathelement path="../common/out/common.jar" />
            <pathelement path="../planet-render/out/planet-render.jar" />
            <pathelement path="../control-field/out/control-field.jar" />
            <pathelement path="../../andengine/bin/classes.jar" />
            <pathelement path="../../appcompat/libs/android-support-v7-appcompat.jar" />
            <pathelement path="../google-play-services/libs/google-play-services.jar" />
            <fileset dir="libs">
                <include name="*.jar" />
            </fileset>
        </path>
        <echo message="After: ${toString:project.all.jars.path}" />
    </target>

    <target name="-post-build">
       <if>
            <condition><equals arg1="${build.target}" arg2="release" /></condition>
            <then>
                <!-- copy the proguard mapping.txt to the server's deploy folder, so that it can
                     be copied to the server (so the server can de-obfuscate stack traces) -->
                <copy tofile="${deploy.location}/data/proguard/mapping-${build.number}.txt"
                      file="bin/proguard/mapping.txt" />
                <copy tofile="../../apk/warworlds-${build.number}-mapping.txt"
                      file="bin/proguard/mapping.txt" />
                <copy tofile="../../apk/warworlds-${build.number}.apk"
                      file="${out.final.file}" />
             </then>
        </if>
    </target>
</project>
