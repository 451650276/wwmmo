import java.util.regex.Pattern

apply plugin: 'com.android.application'

Properties props = new Properties()
props.load(new FileInputStream(file('signing.properties')))

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.google.android.gms:play-services-base:6.5.+'
    compile 'com.google.android.gms:play-services-ads:6.5.87'
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.android.support:support-v4:21.0.3'
    compile project(':common')
    compile project(':control-field')
    compile project(':planet-render')
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        multiDexEnabled true
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    packagingOptions {
        // Don't include NOTICE.txt or LICENSE.txt, many libraries define both and the duplicates
        // confuse the build process.
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }

    // Make sure we're using Java 1.7 source compatibility
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            storeFile file(props['keystore'])
            storePassword props['password']
            keyAlias props['alias']
            keyPassword props['password']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

// This is a task which will increment the build # in AndroidManifest.xml
task('incrementVersionCode') << {
    def manifestFile = file("AndroidManifest.xml")

    // First do the versionCode element, increment the new build #
    def pattern = Pattern.compile("versionCode=\"(\\d+)\"")
    def manifestText = manifestFile.getText()
    def matcher = pattern.matcher(manifestText)
    matcher.find()

    def versionCode = Integer.parseInt(matcher.group(1)) + 1
    manifestText = matcher.replaceAll("versionCode=\"" + versionCode + "\"")

    // Now do versionName with the same build #.
    pattern = Pattern.compile("versionName=\"([0-9]+)\\.([0-9]+)\\.[0-9]+\"")
    matcher = pattern.matcher(manifestText)
    manifestText = matcher.replaceAll("versionName=\"\$1.\$2." + versionCode + "\"")

    manifestFile.write(manifestText)
}

tasks.whenTaskAdded { task ->
    if (task.name == 'generateReleaseBuildConfig') {
        task.dependsOn 'incrementVersionCode'
    }
}
