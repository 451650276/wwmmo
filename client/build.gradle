
buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'org.ajoberstar:grgit:1.5.0'
  }
}

repositories {
  mavenCentral()
}

import org.ajoberstar.grgit.Grgit
apply plugin: 'com.android.application'

Properties signingProps = new Properties()
signingProps.load(new FileInputStream(file('signing.properties')))

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.3"

  defaultConfig {
    applicationId "au.com.codeka.warworlds2"
    minSdkVersion 10
    targetSdkVersion 23
    versionCode getVersionCodeFromGit()
    versionName "1.0"
  }
  signingConfigs {
    release {
      storeFile file(signingProps['keystore'])
      storePassword signingProps['password']
      keyAlias signingProps['alias']
      keyPassword signingProps['password']
    }
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release

      buildConfigField "String", "DEFAULT_SERVER", "\"http://wwmmo.codeka.com.au/\""
    }
    debug {
      buildConfigField "String", "DEFAULT_SERVER", "\"http://10.0.2.2:8080/\""
    }
  }
  dexOptions {
    incremental true
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }
  packagingOptions {
    // These get added twice from different dependencies, so just ignore them.
    exclude 'LICENSE-EPL-1.0.txt'
    exclude 'LICENSE-EDL-1.0.txt'
  }
}

def deployPath = file("${rootDir}/../deploy/${project.name}")

def publish = project.tasks.create("publishAll")
android.applicationVariants.all { variant ->
  variant.outputs.each { output ->

    if (variant.versionName) {
      version "${variant.versionName}.${variant.versionCode}"
    } else {
      version "${variant.versionCode}"
    }

    def task = project.tasks.create("publish${variant.name.capitalize()}", Copy)
    task.from(output.outputFile)
    task.into(deployPath)
    task.rename('.*', "wwmmo2-${variant.name}-${version}.apk")
    task.dependsOn variant.assemble
    publish.dependsOn task
  }
}

def getVersionCodeFromGit() {
  // Same as running:
  // git rev-list <checked out branch name> | wc -l
  return Grgit.open().log().size()
}

dependencies {
  compile fileTree(include: ['*.jar'], dir: 'libs')
  compile "com.andkulikov:transitionseverywhere:1.6.3"
  compile 'com.android.support:appcompat-v7:23.3.0'
  compile 'com.android.support:preference-v7:23.3.0'
  compile 'com.google.guava:guava:19.0'
  compile 'com.neovisionaries:nv-websocket-client:1.25'
  compile 'com.squareup.picasso:picasso:2.5.2'
  compile project(':common')
}
