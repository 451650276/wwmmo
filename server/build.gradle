buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'org.hidetake:gradle-ssh-plugin:2.2.0'
  }
}

repositories {
  mavenCentral()
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'org.hidetake.ssh'

dependencies {
  compile fileTree(dir: '../jetty/lib', include: ['*.jar'])
  compile fileTree(dir: '../jetty/lib/websocket', include: ['*.jar'])
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile 'au.com.codeka:carrot:1.0.0'
  compile 'joda-time:joda-time:2.3'
  compile 'com.google.api-client:google-api-client:1.19.1'
  compile 'com.google.api-client:google-api-client-gson:1.19.1'
  compile 'com.google.code.findbugs:jsr305:3.0.0'
  compile 'com.google.code.gson:gson:2.6.2'
  compile 'com.google.guava:guava:19.0'
  compile 'com.squareup.wire:wire-gson-support:2.1.2'
  compile project(':common')
  compile project(':planet-render')
}

mainClassName = "au.com.codeka.warworlds.server.Program"

task dataFiles {
  // want to include more than just a single directory
  FileTree data = fileTree(dir: "src/main/data/")
  data.exclude "store/*"
  data.exclude "cache/*"
  outputs.dir data
}

applicationDistribution.from(dataFiles) {
  into "data"
}

ssh.settings {
  knownHosts = file('../../known_hosts')
}

remotes {
  prod {
    host = 'wwmmo.codeka.com.au'
    user = 'wwmmo'
    identity = file('../../wwmmo2.id_rsa')
  }
}

task deploy(dependsOn: 'distZip') << {
  ssh.run {
    session(remotes.prod) {
      put file("${buildDir}/distributions/server.zip"), '/home/wwmmo/server.zip'
//      execute 'sudo service tomcat restart'
    }
  }
}
