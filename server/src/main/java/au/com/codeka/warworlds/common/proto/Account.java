// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: au/com/codeka/warworlds/common/proto/account.proto at 50:1
package au.com.codeka.warworlds.common.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireEnum;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * This is the account object that's stored in the data store. It links to your empire and other
 * details about your account.
 */
public final class Account extends Message<Account, Account.Builder> {
  public static final ProtoAdapter<Account> ADAPTER = new ProtoAdapter_Account();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_EMPIRE_ID = 0L;

  public static final String DEFAULT_EMAIL = "";

  public static final String DEFAULT_EMAIL_CANONICAL = "";

  public static final EmailStatus DEFAULT_EMAIL_STATUS = EmailStatus.EMAIL_STATUS_UNKNOWN;

  public static final String DEFAULT_EMAIL_VERIFICATION_CODE = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long empire_id;

  /**
   * If this account is associated with an email address, this is the email address they actually
   * entered (and the one we should send email notifications to, etc.
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String email;

  /**
   * We do some basic "canonicalization" of email address so that you can't just sign up with
   * automtic aliases or something (e.g. in gmail foo@gmail.com and foo+bar@gmail.com are actually
   * the same account). This is only fairly basic, and not really meant to be totally secure.
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String email_canonical;

  @WireField(
      tag = 4,
      adapter = "au.com.codeka.warworlds.common.proto.Account$EmailStatus#ADAPTER"
  )
  public final EmailStatus email_status;

  /**
   * The code we generated and sent the user to verify their email address.
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String email_verification_code;

  public Account(Long empire_id, String email, String email_canonical, EmailStatus email_status, String email_verification_code) {
    this(empire_id, email, email_canonical, email_status, email_verification_code, ByteString.EMPTY);
  }

  public Account(Long empire_id, String email, String email_canonical, EmailStatus email_status, String email_verification_code, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.empire_id = empire_id;
    this.email = email;
    this.email_canonical = email_canonical;
    this.email_status = email_status;
    this.email_verification_code = email_verification_code;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.empire_id = empire_id;
    builder.email = email;
    builder.email_canonical = email_canonical;
    builder.email_status = email_status;
    builder.email_verification_code = email_verification_code;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Account)) return false;
    Account o = (Account) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(empire_id, o.empire_id)
        && Internal.equals(email, o.email)
        && Internal.equals(email_canonical, o.email_canonical)
        && Internal.equals(email_status, o.email_status)
        && Internal.equals(email_verification_code, o.email_verification_code);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (empire_id != null ? empire_id.hashCode() : 0);
      result = result * 37 + (email != null ? email.hashCode() : 0);
      result = result * 37 + (email_canonical != null ? email_canonical.hashCode() : 0);
      result = result * 37 + (email_status != null ? email_status.hashCode() : 0);
      result = result * 37 + (email_verification_code != null ? email_verification_code.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (empire_id != null) builder.append(", empire_id=").append(empire_id);
    if (email != null) builder.append(", email=").append(email);
    if (email_canonical != null) builder.append(", email_canonical=").append(email_canonical);
    if (email_status != null) builder.append(", email_status=").append(email_status);
    if (email_verification_code != null) builder.append(", email_verification_code=").append(email_verification_code);
    return builder.replace(0, 2, "Account{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Account, Builder> {
    public Long empire_id;

    public String email;

    public String email_canonical;

    public EmailStatus email_status;

    public String email_verification_code;

    public Builder() {
    }

    public Builder empire_id(Long empire_id) {
      this.empire_id = empire_id;
      return this;
    }

    /**
     * If this account is associated with an email address, this is the email address they actually
     * entered (and the one we should send email notifications to, etc.
     */
    public Builder email(String email) {
      this.email = email;
      return this;
    }

    /**
     * We do some basic "canonicalization" of email address so that you can't just sign up with
     * automtic aliases or something (e.g. in gmail foo@gmail.com and foo+bar@gmail.com are actually
     * the same account). This is only fairly basic, and not really meant to be totally secure.
     */
    public Builder email_canonical(String email_canonical) {
      this.email_canonical = email_canonical;
      return this;
    }

    public Builder email_status(EmailStatus email_status) {
      this.email_status = email_status;
      return this;
    }

    /**
     * The code we generated and sent the user to verify their email address.
     */
    public Builder email_verification_code(String email_verification_code) {
      this.email_verification_code = email_verification_code;
      return this;
    }

    @Override
    public Account build() {
      return new Account(empire_id, email, email_canonical, email_status, email_verification_code, buildUnknownFields());
    }
  }

  /**
   * The status of the email address. Only verified email addresses "count".
   */
  public enum EmailStatus implements WireEnum {
    EMAIL_STATUS_UNKNOWN(0),

    UNVERIFIED(1),

    VERIFIED(2),

    /**
     * The address used to be associated with this account, but it was abandoned for another.
     */
    ABANDONED(3);

    public static final ProtoAdapter<EmailStatus> ADAPTER = ProtoAdapter.newEnumAdapter(EmailStatus.class);

    private final int value;

    EmailStatus(int value) {
      this.value = value;
    }

    /**
     * Return the constant for {@code value} or null.
     */
    public static EmailStatus fromValue(int value) {
      switch (value) {
        case 0: return EMAIL_STATUS_UNKNOWN;
        case 1: return UNVERIFIED;
        case 2: return VERIFIED;
        case 3: return ABANDONED;
        default: return null;
      }
    }

    @Override
    public int getValue() {
      return value;
    }
  }

  private static final class ProtoAdapter_Account extends ProtoAdapter<Account> {
    ProtoAdapter_Account() {
      super(FieldEncoding.LENGTH_DELIMITED, Account.class);
    }

    @Override
    public int encodedSize(Account value) {
      return (value.empire_id != null ? ProtoAdapter.INT64.encodedSizeWithTag(1, value.empire_id) : 0)
          + (value.email != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.email) : 0)
          + (value.email_canonical != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.email_canonical) : 0)
          + (value.email_status != null ? EmailStatus.ADAPTER.encodedSizeWithTag(4, value.email_status) : 0)
          + (value.email_verification_code != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.email_verification_code) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Account value) throws IOException {
      if (value.empire_id != null) ProtoAdapter.INT64.encodeWithTag(writer, 1, value.empire_id);
      if (value.email != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.email);
      if (value.email_canonical != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.email_canonical);
      if (value.email_status != null) EmailStatus.ADAPTER.encodeWithTag(writer, 4, value.email_status);
      if (value.email_verification_code != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.email_verification_code);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Account decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.empire_id(ProtoAdapter.INT64.decode(reader)); break;
          case 2: builder.email(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.email_canonical(ProtoAdapter.STRING.decode(reader)); break;
          case 4: {
            try {
              builder.email_status(EmailStatus.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 5: builder.email_verification_code(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Account redact(Account value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
