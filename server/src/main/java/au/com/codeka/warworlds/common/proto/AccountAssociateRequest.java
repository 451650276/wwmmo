// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: au/com/codeka/warworlds/common/proto/account.proto at 16:1
package au.com.codeka.warworlds.common.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * The request for /accounts/associate requests to associate an email address with an account.
 */
public final class AccountAssociateRequest extends Message<AccountAssociateRequest, AccountAssociateRequest.Builder> {
  public static final ProtoAdapter<AccountAssociateRequest> ADAPTER = new ProtoAdapter_AccountAssociateRequest();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_COOKIE = "";

  public static final String DEFAULT_EMAIL_ADDR = "";

  public static final Boolean DEFAULT_FORCE = false;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String cookie;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String email_addr;

  /**
   * If the email address is associated with another account, or the empire already has an email
   * associated with it, we'll return an error unless force is true, in which case we'll do it
   * anyway.
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean force;

  public AccountAssociateRequest(String cookie, String email_addr, Boolean force) {
    this(cookie, email_addr, force, ByteString.EMPTY);
  }

  public AccountAssociateRequest(String cookie, String email_addr, Boolean force, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.cookie = cookie;
    this.email_addr = email_addr;
    this.force = force;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.cookie = cookie;
    builder.email_addr = email_addr;
    builder.force = force;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AccountAssociateRequest)) return false;
    AccountAssociateRequest o = (AccountAssociateRequest) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(cookie, o.cookie)
        && Internal.equals(email_addr, o.email_addr)
        && Internal.equals(force, o.force);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (cookie != null ? cookie.hashCode() : 0);
      result = result * 37 + (email_addr != null ? email_addr.hashCode() : 0);
      result = result * 37 + (force != null ? force.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (cookie != null) builder.append(", cookie=").append(cookie);
    if (email_addr != null) builder.append(", email_addr=").append(email_addr);
    if (force != null) builder.append(", force=").append(force);
    return builder.replace(0, 2, "AccountAssociateRequest{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AccountAssociateRequest, Builder> {
    public String cookie;

    public String email_addr;

    public Boolean force;

    public Builder() {
    }

    public Builder cookie(String cookie) {
      this.cookie = cookie;
      return this;
    }

    public Builder email_addr(String email_addr) {
      this.email_addr = email_addr;
      return this;
    }

    /**
     * If the email address is associated with another account, or the empire already has an email
     * associated with it, we'll return an error unless force is true, in which case we'll do it
     * anyway.
     */
    public Builder force(Boolean force) {
      this.force = force;
      return this;
    }

    @Override
    public AccountAssociateRequest build() {
      return new AccountAssociateRequest(cookie, email_addr, force, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AccountAssociateRequest extends ProtoAdapter<AccountAssociateRequest> {
    ProtoAdapter_AccountAssociateRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, AccountAssociateRequest.class);
    }

    @Override
    public int encodedSize(AccountAssociateRequest value) {
      return (value.cookie != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.cookie) : 0)
          + (value.email_addr != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.email_addr) : 0)
          + (value.force != null ? ProtoAdapter.BOOL.encodedSizeWithTag(3, value.force) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AccountAssociateRequest value) throws IOException {
      if (value.cookie != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.cookie);
      if (value.email_addr != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.email_addr);
      if (value.force != null) ProtoAdapter.BOOL.encodeWithTag(writer, 3, value.force);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AccountAssociateRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.cookie(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.email_addr(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.force(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AccountAssociateRequest redact(AccountAssociateRequest value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
