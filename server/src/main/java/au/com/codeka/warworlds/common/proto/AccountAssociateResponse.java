// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: au/com/codeka/warworlds/common/proto/account.proto at 26:1
package au.com.codeka.warworlds.common.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireEnum;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class AccountAssociateResponse extends Message<AccountAssociateResponse, AccountAssociateResponse.Builder> {
  public static final ProtoAdapter<AccountAssociateResponse> ADAPTER = new ProtoAdapter_AccountAssociateResponse();

  private static final long serialVersionUID = 0L;

  public static final AccountAssociateStatus DEFAULT_STATUS = AccountAssociateStatus.STATUS_UNKNOWN;

  @WireField(
      tag = 1,
      adapter = "au.com.codeka.warworlds.common.proto.AccountAssociateResponse$AccountAssociateStatus#ADAPTER"
  )
  public final AccountAssociateStatus status;

  public AccountAssociateResponse(AccountAssociateStatus status) {
    this(status, ByteString.EMPTY);
  }

  public AccountAssociateResponse(AccountAssociateStatus status, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.status = status;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.status = status;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AccountAssociateResponse)) return false;
    AccountAssociateResponse o = (AccountAssociateResponse) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(status, o.status);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (status != null ? status.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (status != null) builder.append(", status=").append(status);
    return builder.replace(0, 2, "AccountAssociateResponse{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AccountAssociateResponse, Builder> {
    public AccountAssociateStatus status;

    public Builder() {
    }

    public Builder status(AccountAssociateStatus status) {
      this.status = status;
      return this;
    }

    @Override
    public AccountAssociateResponse build() {
      return new AccountAssociateResponse(status, buildUnknownFields());
    }
  }

  public enum AccountAssociateStatus implements WireEnum {
    STATUS_UNKNOWN(0),

    SUCCESS(1),

    /**
     * The account is already associated with another email address, and cannot be associated with
     * this one.
     */
    ACCOUNT_ALREADY_ASSOCIATED(2),

    /**
     * The email address is already associated with a different account, cannot be associated with
     * this new account.
     */
    EMAIL_ALREADY_ASSOCIATED(3),

    /**
     * Some other unexpected error.
     */
    UNEXPECTED_ERROR(4),

    /**
     * The association hasn't happened yet.
     */
    NOT_VERIFIED(5);

    public static final ProtoAdapter<AccountAssociateStatus> ADAPTER = ProtoAdapter.newEnumAdapter(AccountAssociateStatus.class);

    private final int value;

    AccountAssociateStatus(int value) {
      this.value = value;
    }

    /**
     * Return the constant for {@code value} or null.
     */
    public static AccountAssociateStatus fromValue(int value) {
      switch (value) {
        case 0: return STATUS_UNKNOWN;
        case 1: return SUCCESS;
        case 2: return ACCOUNT_ALREADY_ASSOCIATED;
        case 3: return EMAIL_ALREADY_ASSOCIATED;
        case 4: return UNEXPECTED_ERROR;
        case 5: return NOT_VERIFIED;
        default: return null;
      }
    }

    @Override
    public int getValue() {
      return value;
    }
  }

  private static final class ProtoAdapter_AccountAssociateResponse extends ProtoAdapter<AccountAssociateResponse> {
    ProtoAdapter_AccountAssociateResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, AccountAssociateResponse.class);
    }

    @Override
    public int encodedSize(AccountAssociateResponse value) {
      return (value.status != null ? AccountAssociateStatus.ADAPTER.encodedSizeWithTag(1, value.status) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AccountAssociateResponse value) throws IOException {
      if (value.status != null) AccountAssociateStatus.ADAPTER.encodeWithTag(writer, 1, value.status);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AccountAssociateResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: {
            try {
              builder.status(AccountAssociateStatus.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AccountAssociateResponse redact(AccountAssociateResponse value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
