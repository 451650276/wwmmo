// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./messages.proto
package au.com.codeka.common.protobuf;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Label.REPEATED;

public final class Notifications extends Message {
  private static final long serialVersionUID = 0L;

  public static final List<Notification> DEFAULT_NOTIFICATIONS = Collections.emptyList();

  @ProtoField(tag = 1, label = REPEATED, messageType = Notification.class)
  public List<Notification> notifications;

  public Notifications() {
  }

  public Notifications(List<Notification> notifications) {
    this.notifications = copyOf(notifications);
  }

  private Notifications(Builder builder) {
    this(builder.notifications);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Notifications)) return false;
    return equals(notifications, ((Notifications) other).notifications);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = notifications != null ? notifications.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<Notifications> {

    public List<Notification> notifications;

    public Builder() {
    }

    public Builder(Notifications message) {
      super(message);
      if (message == null) return;
      this.notifications = copyOf(message.notifications);
    }

    public Builder notifications(List<Notification> notifications) {
      this.notifications = checkForNulls(notifications);
      return this;
    }

    @Override
    public Notifications build() {
      return new Notifications(this);
    }
  }
}
