// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: account.proto at 28:1
package au.com.codeka.warworlds.common.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * This is sent from the /login endpoing in response to a LoginRequest.
 */
public final class LoginResponse extends Message<LoginResponse, LoginResponse.Builder> {
  public static final ProtoAdapter<LoginResponse> ADAPTER = new ProtoAdapter_LoginResponse();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_HOST = "";

  public static final Integer DEFAULT_PORT = 0;

  public static final Boolean DEFAULT_REQUIRE_GCM_REGISTER = false;

  public static final Boolean DEFAULT_FORCE_REMOVE_ADS = false;

  /**
   * The host to connect to.
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String host;

  /**
   * The port to connect to.
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer port;

  /**
   * If specified, the Empire you're currently logged in as (if not specified, it means
   * you haven't set up an empire yet, and you should do that before anything else...)
   */
  @WireField(
      tag = 3,
      adapter = "au.com.codeka.warworlds.common.proto.Empire#ADAPTER"
  )
  public final Empire empire;

  /**
   * If true, it means we need to re-register with GCM (maybe because last time it failed)
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean require_gcm_register;

  /**
   * If true, we'll force the ads to be removed. If false, or not specified, we'll check
   * whatever the In-App Purchase API has to say.
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean force_remove_ads;

  public LoginResponse(String host, Integer port, Empire empire, Boolean require_gcm_register, Boolean force_remove_ads) {
    this(host, port, empire, require_gcm_register, force_remove_ads, ByteString.EMPTY);
  }

  public LoginResponse(String host, Integer port, Empire empire, Boolean require_gcm_register, Boolean force_remove_ads, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.host = host;
    this.port = port;
    this.empire = empire;
    this.require_gcm_register = require_gcm_register;
    this.force_remove_ads = force_remove_ads;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.host = host;
    builder.port = port;
    builder.empire = empire;
    builder.require_gcm_register = require_gcm_register;
    builder.force_remove_ads = force_remove_ads;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof LoginResponse)) return false;
    LoginResponse o = (LoginResponse) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(host, o.host)
        && Internal.equals(port, o.port)
        && Internal.equals(empire, o.empire)
        && Internal.equals(require_gcm_register, o.require_gcm_register)
        && Internal.equals(force_remove_ads, o.force_remove_ads);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (host != null ? host.hashCode() : 0);
      result = result * 37 + (port != null ? port.hashCode() : 0);
      result = result * 37 + (empire != null ? empire.hashCode() : 0);
      result = result * 37 + (require_gcm_register != null ? require_gcm_register.hashCode() : 0);
      result = result * 37 + (force_remove_ads != null ? force_remove_ads.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (host != null) builder.append(", host=").append(host);
    if (port != null) builder.append(", port=").append(port);
    if (empire != null) builder.append(", empire=").append(empire);
    if (require_gcm_register != null) builder.append(", require_gcm_register=").append(require_gcm_register);
    if (force_remove_ads != null) builder.append(", force_remove_ads=").append(force_remove_ads);
    return builder.replace(0, 2, "LoginResponse{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<LoginResponse, Builder> {
    public String host;

    public Integer port;

    public Empire empire;

    public Boolean require_gcm_register;

    public Boolean force_remove_ads;

    public Builder() {
    }

    /**
     * The host to connect to.
     */
    public Builder host(String host) {
      this.host = host;
      return this;
    }

    /**
     * The port to connect to.
     */
    public Builder port(Integer port) {
      this.port = port;
      return this;
    }

    /**
     * If specified, the Empire you're currently logged in as (if not specified, it means
     * you haven't set up an empire yet, and you should do that before anything else...)
     */
    public Builder empire(Empire empire) {
      this.empire = empire;
      return this;
    }

    /**
     * If true, it means we need to re-register with GCM (maybe because last time it failed)
     */
    public Builder require_gcm_register(Boolean require_gcm_register) {
      this.require_gcm_register = require_gcm_register;
      return this;
    }

    /**
     * If true, we'll force the ads to be removed. If false, or not specified, we'll check
     * whatever the In-App Purchase API has to say.
     */
    public Builder force_remove_ads(Boolean force_remove_ads) {
      this.force_remove_ads = force_remove_ads;
      return this;
    }

    @Override
    public LoginResponse build() {
      return new LoginResponse(host, port, empire, require_gcm_register, force_remove_ads, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_LoginResponse extends ProtoAdapter<LoginResponse> {
    ProtoAdapter_LoginResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, LoginResponse.class);
    }

    @Override
    public int encodedSize(LoginResponse value) {
      return (value.host != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.host) : 0)
          + (value.port != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.port) : 0)
          + (value.empire != null ? Empire.ADAPTER.encodedSizeWithTag(3, value.empire) : 0)
          + (value.require_gcm_register != null ? ProtoAdapter.BOOL.encodedSizeWithTag(4, value.require_gcm_register) : 0)
          + (value.force_remove_ads != null ? ProtoAdapter.BOOL.encodedSizeWithTag(5, value.force_remove_ads) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, LoginResponse value) throws IOException {
      if (value.host != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.host);
      if (value.port != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.port);
      if (value.empire != null) Empire.ADAPTER.encodeWithTag(writer, 3, value.empire);
      if (value.require_gcm_register != null) ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.require_gcm_register);
      if (value.force_remove_ads != null) ProtoAdapter.BOOL.encodeWithTag(writer, 5, value.force_remove_ads);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public LoginResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.host(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.port(ProtoAdapter.INT32.decode(reader)); break;
          case 3: builder.empire(Empire.ADAPTER.decode(reader)); break;
          case 4: builder.require_gcm_register(ProtoAdapter.BOOL.decode(reader)); break;
          case 5: builder.force_remove_ads(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public LoginResponse redact(LoginResponse value) {
      Builder builder = value.newBuilder();
      if (builder.empire != null) builder.empire = Empire.ADAPTER.redact(builder.empire);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
