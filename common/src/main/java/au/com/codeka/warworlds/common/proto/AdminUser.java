// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: admin.proto at 12:1
package au.com.codeka.warworlds.common.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * An admin user is used by the backend to do authentication and authorization.
 */
public final class AdminUser extends Message<AdminUser, AdminUser.Builder> {
  public static final ProtoAdapter<AdminUser> ADAPTER = new ProtoAdapter_AdminUser();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_EMAIL_ADDR = "";

  public static final AdminRole DEFAULT_ROLE = AdminRole.ADMINISTRATOR;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String email_addr;

  @WireField(
      tag = 2,
      adapter = "au.com.codeka.warworlds.common.proto.AdminRole#ADAPTER"
  )
  public final AdminRole role;

  public AdminUser(String email_addr, AdminRole role) {
    this(email_addr, role, ByteString.EMPTY);
  }

  public AdminUser(String email_addr, AdminRole role, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.email_addr = email_addr;
    this.role = role;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.email_addr = email_addr;
    builder.role = role;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AdminUser)) return false;
    AdminUser o = (AdminUser) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(email_addr, o.email_addr)
        && Internal.equals(role, o.role);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (email_addr != null ? email_addr.hashCode() : 0);
      result = result * 37 + (role != null ? role.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (email_addr != null) builder.append(", email_addr=").append(email_addr);
    if (role != null) builder.append(", role=").append(role);
    return builder.replace(0, 2, "AdminUser{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AdminUser, Builder> {
    public String email_addr;

    public AdminRole role;

    public Builder() {
    }

    public Builder email_addr(String email_addr) {
      this.email_addr = email_addr;
      return this;
    }

    public Builder role(AdminRole role) {
      this.role = role;
      return this;
    }

    @Override
    public AdminUser build() {
      return new AdminUser(email_addr, role, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AdminUser extends ProtoAdapter<AdminUser> {
    ProtoAdapter_AdminUser() {
      super(FieldEncoding.LENGTH_DELIMITED, AdminUser.class);
    }

    @Override
    public int encodedSize(AdminUser value) {
      return (value.email_addr != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.email_addr) : 0)
          + (value.role != null ? AdminRole.ADAPTER.encodedSizeWithTag(2, value.role) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AdminUser value) throws IOException {
      if (value.email_addr != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.email_addr);
      if (value.role != null) AdminRole.ADAPTER.encodeWithTag(writer, 2, value.role);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AdminUser decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.email_addr(ProtoAdapter.STRING.decode(reader)); break;
          case 2: {
            try {
              builder.role(AdminRole.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AdminUser redact(AdminUser value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
